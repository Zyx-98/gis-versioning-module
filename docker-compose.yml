services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    container_name: gis_versioning_client
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:3000/api}
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: gis_versioning_server
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - 3000:3000
    environment:
      CORS_ORIGIN: http://localhost:5173,http://localhost:3000
      APP_PORT: 3000
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_NAME: gis_versioning
      JWT_SECRET: secret-key
      JWT_EXPIRATION: 360000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_REDIS_HOST: redis
      QUEUE_REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgis/postgis:16-3.5
    platform: linux/amd64
    container_name: gis_versioning_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gis_versioning
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=128MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "max_wal_size=4GB"
      - "-c"
      - "max_worker_processes=4"
      - "-c"
      - "max_parallel_workers_per_gather=2"
      - "-c"
      - "max_parallel_workers=4"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gis_user"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  db_data:

networks:
  default:
    name: gis_network